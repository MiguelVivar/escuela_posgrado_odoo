#!/bin/bash

echo "üîß FORZAR DISPONIBILIDAD DE M√ìDULOS EN INTERFAZ ODOO"
echo "==================================================="
echo "Fecha: $(date)"
echo

# Configurar variables
DB_HOST="${DB_HOST:-${PGHOST:-postgres}}"
DB_PORT="${DB_PORT:-${PGPORT:-5432}}"
DB_USER="${DB_USER:-${PGUSER:-postgres}}"
DB_PASSWORD="${DB_PASSWORD:-${PGPASSWORD:-postgres}}"
DB_NAME="${DB_NAME:-${PGDATABASE:-odoo_db}}"

echo "üìã Variables de conexi√≥n:"
echo "  DB_HOST: $DB_HOST"
echo "  DB_PORT: $DB_PORT"
echo "  DB_USER: $DB_USER"
echo "  DB_NAME: $DB_NAME"
echo

echo "üõ†Ô∏è 1. Verificando y corrigiendo permisos de archivos..."
echo "======================================================="
if [ -d "/mnt/custom-addons" ]; then
    echo "‚úÖ Corrigiendo permisos de /mnt/custom-addons..."
    chown -R odoo:odoo /mnt/custom-addons/ 2>/dev/null || echo "‚ö†Ô∏è No se pudieron cambiar los propietarios (puede ser normal en Railway)"
    chmod -R 755 /mnt/custom-addons/ 2>/dev/null || echo "‚ö†Ô∏è No se pudieron cambiar los permisos (puede ser normal en Railway)"
    
    # Asegurar que los archivos Python y XML tienen permisos correctos
    find /mnt/custom-addons/ -name "*.py" -exec chmod 644 {} \; 2>/dev/null || true
    find /mnt/custom-addons/ -name "*.xml" -exec chmod 644 {} \; 2>/dev/null || true
    find /mnt/custom-addons/ -name "*.csv" -exec chmod 644 {} \; 2>/dev/null || true
    
    echo "‚úÖ Permisos corregidos"
else
    echo "‚ùå Directorio /mnt/custom-addons no existe"
    exit 1
fi
echo

echo "üîç 2. Verificando estructura de m√≥dulos..."
echo "=========================================="
for module_dir in /mnt/custom-addons/*/; do
    if [ -d "$module_dir" ]; then
        module_name=$(basename "$module_dir")
        echo "üìÅ Verificando m√≥dulo: $module_name"
        
        if [ ! -f "$module_dir/__manifest__.py" ]; then
            echo "   ‚ùå Falta __manifest__.py"
        else
            echo "   ‚úÖ __manifest__.py presente"
        fi
        
        if [ ! -f "$module_dir/__init__.py" ]; then
            echo "   ‚ùå Falta __init__.py"
        else
            echo "   ‚úÖ __init__.py presente"
        fi
    fi
done
echo

echo "üîÑ 3. Forzando actualizaci√≥n de lista de m√≥dulos en Odoo..."
echo "=========================================================="
echo "Ejecutando actualizaci√≥n de m√≥dulos..."
if python3 /usr/bin/odoo -c /etc/odoo/odoo.conf -d "$DB_NAME" --update-modules-list --stop-after-init --log-level=info; then
    echo "‚úÖ Lista de m√≥dulos actualizada exitosamente"
else
    echo "‚ùå Error actualizando lista de m√≥dulos"
    echo "Intentando con modo de desarrollo..."
    if python3 /usr/bin/odoo -c /etc/odoo/odoo.conf -d "$DB_NAME" --update-modules-list --stop-after-init --log-level=debug --dev=all; then
        echo "‚úÖ Lista de m√≥dulos actualizada en modo desarrollo"
    else
        echo "‚ùå Error incluso en modo desarrollo"
    fi
fi
echo

echo "üóÑÔ∏è 4. Verificando m√≥dulos en la base de datos..."
echo "==============================================="
if PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "SELECT 1;" >/dev/null 2>&1; then
    echo "‚úÖ Conexi√≥n a base de datos exitosa"
    
    echo "üìä Estado actual de m√≥dulos personalizados:"
    PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "
    SELECT 
        name,
        state,
        CASE 
            WHEN installable THEN 'S√≠' 
            ELSE 'No' 
        END as instalable,
        CASE 
            WHEN auto_install THEN 'S√≠' 
            ELSE 'No' 
        END as auto_instalar
    FROM ir_module_module 
    WHERE name IN (
        'education_core', 'education_theme', 'education_attendances',
        'muk_web_theme', 'muk_web_appsbar', 'muk_web_chatter', 
        'muk_web_colors', 'muk_web_dialog', 'om_hr_payroll', 'query_deluxe'
    )
    ORDER BY name;
    "
else
    echo "‚ùå No se puede conectar a la base de datos"
    exit 1
fi
echo

echo "üîß 5. Marcando m√≥dulos como instalables si no lo est√°n..."
echo "========================================================"
MODULES_TO_FIX=("education_core" "education_theme" "education_attendances" "muk_web_theme" "muk_web_appsbar" "muk_web_chatter" "muk_web_colors" "muk_web_dialog" "om_hr_payroll" "query_deluxe")

for module_name in "${MODULES_TO_FIX[@]}"; do
    echo "üîç Verificando m√≥dulo: $module_name"
    
    # Verificar si el m√≥dulo existe en la tabla
    MODULE_EXISTS=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -tAc "
    SELECT COUNT(*) FROM ir_module_module WHERE name='$module_name';
    " 2>/dev/null || echo "0")
    
    if [ "$MODULE_EXISTS" = "0" ]; then
        echo "   ‚ö†Ô∏è M√≥dulo no encontrado en la base de datos"
        continue
    fi
    
    # Verificar si es instalable
    IS_INSTALLABLE=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -tAc "
    SELECT installable FROM ir_module_module WHERE name='$module_name';
    " 2>/dev/null || echo "f")
    
    if [ "$IS_INSTALLABLE" = "f" ]; then
        echo "   üîß Marcando como instalable..."
        PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "
        UPDATE ir_module_module 
        SET installable = true 
        WHERE name='$module_name';
        " >/dev/null 2>&1
        
        if [ $? -eq 0 ]; then
            echo "   ‚úÖ M√≥dulo marcado como instalable"
        else
            echo "   ‚ùå Error marcando m√≥dulo como instalable"
        fi
    else
        echo "   ‚úÖ M√≥dulo ya es instalable"
    fi
done
echo

echo "üöÄ 6. Reiniciando servicio de Odoo para aplicar cambios..."
echo "========================================================"
echo "‚ö†Ô∏è IMPORTANTE: Despu√©s de ejecutar este script, ser√° necesario reiniciar el servicio de Odoo"
echo "En Railway, esto se hace autom√°ticamente con un nuevo deploy o reinicio del servicio"
echo

echo "üìã 7. Estado final de m√≥dulos:"
echo "=============================="
PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "
SELECT 
    name,
    state,
    CASE 
        WHEN installable THEN 'S√≠' 
        ELSE 'No' 
    END as instalable
FROM ir_module_module 
WHERE name IN (
    'education_core', 'education_theme', 'education_attendances',
    'muk_web_theme', 'muk_web_appsbar', 'muk_web_chatter', 
    'muk_web_colors', 'muk_web_dialog', 'om_hr_payroll', 'query_deluxe'
)
ORDER BY name;
"

echo
echo "‚úÖ PROCESO COMPLETADO"
echo "===================="
echo "üìù PR√ìXIMOS PASOS:"
echo "1. Si est√°s en Railway, haz un redeploy del servicio"
echo "2. Accede a la interfaz web de Odoo"
echo "3. Ve a Apps/Aplicaciones"
echo "4. Quita el filtro 'Apps' y busca tus m√≥dulos personalizados"
echo "5. Los m√≥dulos deber√≠an aparecer disponibles para instalar"
echo
echo "üí° Si los m√≥dulos siguen sin aparecer:"
echo "1. En la interfaz web, ve a Apps"
echo "2. Haz clic en 'Update Apps List' (Actualizar lista de aplicaciones)"
echo "3. Busca tus m√≥dulos por nombre"
echo
echo "üéØ COMANDOS √öTILES PARA RAILWAY:"
echo "- railway logs --follow (para ver logs en tiempo real)"
echo "- railway ps restart (para reiniciar el servicio)"
