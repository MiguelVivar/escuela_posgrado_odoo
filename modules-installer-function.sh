#!/bin/bash

# Script de instalaci√≥n de m√≥dulos que se puede incluir en start.sh
install_custom_modules_improved() {
    echo "üöÄ INSTALADOR MEJORADO DE M√ìDULOS PERSONALIZADOS"
    echo "==============================================="
    
    # Verificar si existe el instalador inteligente
    if [ -f "/usr/local/bin/smart-modules-installer.sh" ]; then
        echo "‚úÖ Usando instalador inteligente..."
        if /usr/local/bin/smart-modules-installer.sh; then
            echo "‚úÖ Instalaci√≥n inteligente completada exitosamente"
            return 0
        else
            echo "‚ö†Ô∏è Instalaci√≥n inteligente fall√≥, usando m√©todo tradicional..."
        fi
    else
        echo "‚ÑπÔ∏è Instalador inteligente no disponible, usando m√©todo tradicional..."
    fi
    
    # M√©todo tradicional mejorado
    echo "üì¶ Iniciando instalaci√≥n tradicional..."
    
    if [ ! -d "/mnt/custom-addons" ] || [ ! "$(ls -A /mnt/custom-addons)" ]; then
        echo "‚ùå No se encontraron m√≥dulos personalizados en /mnt/custom-addons"
        return 1
    fi
    
    echo "üìã M√≥dulos encontrados:"
    ls -la /mnt/custom-addons/
    echo
    
    # Orden manual basado en dependencias
    local MODULE_ORDER=(
        "education_theme"
        "query_deluxe"
        "muk_web_colors"
        "muk_web_dialog"
        "muk_web_theme"
        "muk_web_chatter"
        "muk_web_appsbar"
        "om_hr_payroll"
        "education_core"
        "education_attendances"
    )
    
    local MODULES_TO_INSTALL=""
    local SUCCESS_COUNT=0
    
    for module_name in "${MODULE_ORDER[@]}"; do
        if [ -d "/mnt/custom-addons/$module_name" ] && [ -f "/mnt/custom-addons/$module_name/__manifest__.py" ]; then
            echo "üîç Verificando: $module_name"
            
            # Verificar estado del m√≥dulo
            MODULE_STATE=$(PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -tAc "SELECT state FROM ir_module_module WHERE name='$module_name';" 2>/dev/null || echo "not_found")
            echo "  Estado: $MODULE_STATE"
            
            if [ "$MODULE_STATE" = "installed" ]; then
                echo "  ‚úÖ Ya instalado"
                SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
            elif [ "$MODULE_STATE" = "not_found" ] || [ "$MODULE_STATE" = "uninstalled" ]; then
                echo "  üöÄ Instalando $module_name..."
                if python3 /usr/bin/odoo -c /etc/odoo/odoo.conf -d "$DB_NAME" -i "$module_name" --stop-after-init --without-demo=all --log-level=info; then
                    echo "  ‚úÖ Instalado exitosamente"
                    SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
                else
                    echo "  ‚ùå Error en instalaci√≥n"
                fi
            elif [ "$MODULE_STATE" = "to upgrade" ]; then
                echo "  ‚¨ÜÔ∏è Actualizando $module_name..."
                if python3 /usr/bin/odoo -c /etc/odoo/odoo.conf -d "$DB_NAME" -u "$module_name" --stop-after-init --without-demo=all --log-level=info; then
                    echo "  ‚úÖ Actualizado exitosamente"
                    SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
                else
                    echo "  ‚ùå Error en actualizaci√≥n"
                fi
            fi
        fi
    done
    
    echo
    echo "üìä RESUMEN: $SUCCESS_COUNT m√≥dulos procesados exitosamente"
    
    if [ $SUCCESS_COUNT -gt 0 ]; then
        echo "‚úÖ Instalaci√≥n de m√≥dulos personalizados completada"
        return 0
    else
        echo "‚ùå No se pudo instalar ning√∫n m√≥dulo"
        return 1
    fi
}

# Si se ejecuta directamente
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    install_custom_modules_improved
fi